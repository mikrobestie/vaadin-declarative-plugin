{
  parserClass = 'cz.mikrobestie.idea.vaadin.declarative.lang.VaadinDesignParser'
  parserUtilClass="cz.mikrobestie.idea.vaadin.declarative.lang.VaadinDesignParserUtil"

  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix="VD"
  psiImplClassSuffix="Impl"
  psiPackage="cz.mikrobestie.idea.vaadin.declarative.psi"
  psiImplPackage="cz.mikrobestie.idea.vaadin.declarative.psi.impl"

  elementTypeHolderClass="cz.mikrobestie.idea.vaadin.declarative.psi.VDTypes"
  elementTypeClass="cz.mikrobestie.idea.vaadin.declarative.psi.VDElementType"
  tokenTypeClass="cz.mikrobestie.idea.vaadin.declarative.psi.VDTokenType"
}

Document ::= Doctype? (HtmlTag | Component)
Doctype ::= '<!DOCTYPE html>'
HtmlTag ::= '<html' Attr* EL_RIGHT HeadTag? BodyTag '</html>'
HeadTag ::= '<head>' MetaTag* '</head>'
MetaTag ::= '<meta' EL_CLOSE_RIGHT
BodyTag ::= '<body>' Component '</body>'
HtmlContent ::= (EL_LEFT NAME EL_CLOSE_RIGHT) | (EL_LEFT NAME EL_RIGHT HtmlContent* EL_CLOSE_LEFT NAME EL_RIGHT)
Component ::= EL_LEFT NAME Attr* (EL_CLOSE_RIGHT | EL_RIGHT (HtmlContent | Component*) EL_CLOSE_LEFT NAME EL_RIGHT)
Attr ::= (LocalIdAttr | AttrWithValue | ParentAttr)
LocalIdAttr ::= '_id=' ATTR_VALUE
ParentAttr ::= ':' AttrWithValue
AttrWithValue ::= NAME ('=' ATTR_VALUE)?