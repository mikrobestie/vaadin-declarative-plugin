{
  parserClass = 'cz.mikrobestie.idea.vaadin.declarative.lang.VaadinDesignParser'
  parserUtilClass="cz.mikrobestie.idea.vaadin.declarative.lang.VaadinDesignParserUtil"

  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix="VD"
  psiImplClassSuffix="Impl"
  psiPackage="cz.mikrobestie.idea.vaadin.declarative.psi"
  psiImplPackage="cz.mikrobestie.idea.vaadin.declarative.psi.impl"

  elementTypeHolderClass="cz.mikrobestie.idea.vaadin.declarative.psi.VDTypes"
  elementTypeClass="cz.mikrobestie.idea.vaadin.declarative.psi.VDElementType"
  tokenTypeClass="cz.mikrobestie.idea.vaadin.declarative.psi.VDTokenType"
}

Document ::= DOCTYPE_DECL? COMMENT* (HtmlTag | Component)
HtmlTag ::= TAG_HTML_OPEN Attr* EL_RIGHT HeadTag? BodyTag TAG_HTML_CLOSE {pin=1}
HeadTag ::= TAG_HEAD_OPEN MetaTag* TAG_HEAD_CLOSE {pin = 1}
MetaTag ::= TAG_META_OPEN Attr+ EL_CLOSE_RIGHT {pin = 1}
BodyTag ::= TAG_BODY_OPEN Component TAG_BODY_CLOSE {pin = 1}

Component ::= ComponentSelfClosing | ComponentPair {
    mixin        = "cz.mikrobestie.idea.vaadin.declarative.psi.impl.VDNamedElementImpl"
    implements   = "cz.mikrobestie.idea.vaadin.declarative.psi.VDNamedElement"
    methods      = [getKey getValue getName setName getNameIdentifier]
}

private ComponentSelfClosing ::= EL_LEFT ELEM_NAME Attr* EL_CLOSE_RIGHT
private ComponentPair ::= ComponentOpen Component* ComponentClose {pin=1 recoverWhile="ComponentPairRecover"}
private ComponentPairRecover ::= !(Component | TAG_BODY_CLOSE)
private ComponentOpen ::= EL_LEFT ELEM_NAME Attr* EL_RIGHT
private ComponentOpenRecover ::= !EL_LEFT
private ComponentClose ::= EL_CLOSE_LEFT ELEM_NAME EL_RIGHT

Attr ::= ATTR_NAME (EQ ATTR_VALUE)? {
    mixin       = ""
}